name: Build and Deploy
on:
  workflow_dispatch:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches: [ sfawcett123-patch-1 ]
  push:
    branches: [ sfawcett123-patch-1 ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      DOCKER_IMAGE: ${{ steps.docker.outputs.DOCKER_IMAGE }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2.3.4

      - name: set-up-environment
        uses: DFE-Digital/github-actions/set-up-environment@master

      - uses: Azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: Azure/get-keyvault-secrets@v1.2
        id:   azSecret
        with:
           keyvault: ${{ secrets.KEY_VAULT}}
           secrets: 'ACTIONS-API-ACCESS-TOKEN, SLACK-WEBHOOK'

      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
             dockerfile: "Dockerfile"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Get Short SHA
        id: sha
        run: |
             echo ::set-output name=short::$(echo $GITHUB_SHA | cut -c -7)
             
      - name: Set DOCKER_IMAGE environment variable
        id:   docker
        run: |
             if [ "${{github.ref}}" == "refs/heads/master" ]
             then
                echo ::set-output name=DOCKER_IMAGE::${{ env.DOCKER_REPOSITORY }}:sha-${{ steps.sha.outputs.short }}
             else
                echo ::set-output name=DOCKER_IMAGE::${{ env.DOCKER_REPOSITORY }}:review-${{steps.sha.outputs.short }}
             fi
             
      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
             ${{ runner.os }}-buildx-
      - name: Login to Docker Hub
        uses: docker/login-action@v1.9.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ steps.azSecret.outputs.ACTIONS-API-ACCESS-TOKEN }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v2.5.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
                 ${{ steps.docker.outputs.DOCKER_IMAGE }}
          push: true
          build-args: |
                      SHA=${{ steps.sha.outputs.short }}
                      
      - name: Slack Notification
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@master
        env:
           SLACK_COLOR: ${{env.SLACK_ERROR}}
           SLACK_MESSAGE: 'There has been a failure building the application'
           SLACK_TITLE: 'Failure Building Application'
           SLACK_WEBHOOK: ${{ steps.azSecret.outputs.SLACK-WEBHOOK }}


 
