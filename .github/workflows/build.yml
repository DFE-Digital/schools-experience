name: Pull Requests
on:
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
  push:
    branches: [ master ]
  release:
    types: [ created ]

env:
  DOCKER_ORGANISATION: mattonfoot
  DOCKER_CONTAINER: school-experience
  CUCUMBER_PROFILE: continuous_integration
  SELENIUM_PROFILE: selenium
  # define four more variables imageName, DOCKER_HUB_REPO in the build pipeline in UI

jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

      - name: Prepare build parameters
        id: build-params
        run: |
          IMAGE="${DOCKER_ORGANISATION}/${DOCKER_CONTAINER}"
          VERSION=noop
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${IMAGE}:${MINOR},${IMAGE}:${MAJOR},${IMAGE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          CACHE_KEY=`cat Dockerfile .dockerignore Gemfile Gemfile.lock package.json yarn.lock | shasum | cut -d ' ' -f 1`
          echo ::set-output name=cache_key::${CACHE_KEY}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=image::${IMAGE}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PERSONAL_ACCESS_TOKEN }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          #platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: ${{ steps.build-params.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.build-params.outputs.version }}
            org.opencontainers.image.created=${{ steps.build-params.outputs.created }}
            org.opencontainers.image.revision=${GITHUB_SHA}
          #org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

      - name: Update Docker Hub Description from README.md
        uses: peter-evans/dockerhub-description@v2
        if: false
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PERSONAL_ACCESS_TOKEN }}
          DOCKERHUB_REPOSITORY: ${{ steps.build-params.outputs.image }}

      - name: Create docker compose override file
        run: |
          script/docker-override.sh ${{ steps.build-params.outputs.image }}:${{ steps.build-params.outputs.version }}

      - name: Upload docker compose override file
        uses: actions/upload-artifact@v2
        with:
          name: docker-compose-override
          path: ./docker-compose-override.yml

  test:
    name: Non-browser testing
    runs-on: ubuntu-18.04
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download docker compose override file
        uses: actions/download-artifact@v2
        with:
          name: docker-compose-override

      - name: Clean up docker compose override file
        uses: geekyeggo/delete-artifact@v1
        with:
          name: docker-compose-override

      - name: Create Docker Compose stack
        run: |
          docker-compose -f docker-compose.yml -f docker-compose-override.yml up -d
            WAIT_COUNT=0
            until docker-compose ps | grep -m 1 "db-tasks" | grep -m 1 "Exit 0" || [ $WAIT_COUNT -eq 12 ] ; do echo "WAIT COUNT $(( WAIT_COUNT++ ))" && sleep 5 ; done

      - name: Run Brakeman security scan
        run: |
          docker-compose -f docker-compose.yml -f docker-compose-override.yml \
            run --rm db-tasks \
            brakeman --no-pager

      - name: Run GovUK Lint check
        run: |
          docker-compose -f docker-compose.yml -f docker-compose-override.yml \
            run --rm db-tasks \
            rubocop app config lib features spec spec_external --format clang

      - name: Run Specs
        run: |
          docker-compose -f docker-compose.yml -f docker-compose-override.yml \
            run --rm db-tasks \
            rspec --format documentation --format RspecSonarqubeFormatter --out /ci_build/rspec_results.xml

      - name: Run Cucumber features
        run: |
          docker-compose -f docker-compose.yml -f docker-compose-override.yml \
            run --rm -e DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true db-tasks \
            cucumber --profile=${{ env.CUCUMBER_PROFILE }} --format junit --out /ci_build/junit

      - name: Upload Spec Results
        uses: actions/upload-artifact@v2
        with:
          name: spec-results
          path: ./rspec_results.xml

      - name: Upload Feature Results
        uses: actions/upload-artifact@v2
        with:
          name: feature-results
          path: junit/*
